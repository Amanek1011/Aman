import asyncio
import os

from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder
from dotenv import load_dotenv

import keyboards as kb
from charity import get_charity
from helping_animals import start_shelter
from news import get_news_today, get_data_today, get_news_yesterday, get_data_yesterday, send_long_message

load_dotenv()
TOKEN = os.getenv("TOKEN")
bot = Bot(token=TOKEN)
dp = Dispatcher()

questions = [
    {"text": "–í—ã –≥–æ—Ç–æ–≤—ã –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –ø–∏—Ç–æ–º—Ü–µ –≤—Å—é –µ–≥–æ –∂–∏–∑–Ω—å?", "buttons": ["–î–∞", "–ù–µ—Ç"]},
    {"text": "–ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã –ø–æ—Å–µ—â–∞—Ç—å –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞ –≤ —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏?", "buttons": ["–î–∞", "–ù–µ—Ç"]},
    {"text": "–í—ã –º–æ–∂–µ—Ç–µ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –ø–∏—Ç–æ–º—Ü—É –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∂–∏–∑–Ω–∏?", "buttons": ["–î–∞", "–ù–µ—Ç"]},
]

pets = [
    {"id": 1, "name": "–ë–∞—Ä—Å–∏–∫", "photo": "https://melitopol-news.ru/img/20240305/a9073bcadfb86dc6a12733530c3f2333_o.jpg", "desc": "–¥–æ–±—Ä—ã–π –∫–æ—Ç–∏–∫", "age": 2},
    {"id": 2, "name": "–ü—Ä–∏–Ω—Ü–µ—Å—Å–∞", "photo": "https://i.pinimg.com/736x/22/c1/79/22c17996e3e7f4479d0b9960b4e0cbd0.jpg", "desc": "–õ—é–±–∏—Ç –≥—É–ª—è—Ç—å", "age": 3},
    {"id": 3, "name": "–°–∞—à–∞", "photo": "https://i.pinimg.com/736x/59/7a/cf/597acf74dac3b7258bd8a0209efd925f.jpg", "desc": "–°–∞—à–∞ —Å–≤–∏–Ω—Ç—É—Å", "age": 1},
    {"id": 4, "name": "–õ—é—Å–∏–Ω–∫–∞", "photo": "https://pic.rutubelist.ru/user/55/99/55996e286a9c7916e02caca2b1a93394.jpg", "desc": "–ö—Ä–∞—Å–∞–≤–∏—Ü–∞ –∏ —É–º–Ω–∏—Ü–∞", "age": 4},
    {"id": 5, "name": "–¢–æ–º–º–∏", "photo": "https://i.pinimg.com/originals/ea/21/b6/ea21b6d98f790d40beb06350a6f6904d.jpg", "desc": "–í–µ—Ä–Ω—ã–π –¥—Ä—É–≥", "age": 5},
    {"id": 6, "name": "–õ—É–Ω–∞", "photo": "https://i.pinimg.com/originals/59/a4/06/59a406200e3a54ed084a2a6268e28e18.jpg", "desc": "–û—á–∞—Ä–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –∫–æ—à–µ—á–∫–∞", "age": 3},
    {"id": 7, "name": "–ú—É—Ä–∫–∞", "photo": "https://habrastorage.org/r/w780/getpro/habr/upload_files/779/147/c1f/779147c1fef39f67a04d66eba21b32ff.jpeg", "desc": "–•–∏—Ç—Ä–∞—è –∫–æ—à–∫–∞", "age": 2},
    {"id": 8, "name": "–î–∂–µ–∫", "photo": "https://avatars.mds.yandex.net/i?id=0dfdcdcf7c863f9cf16e70bf03bdb1cd_l-5370628-images-thumbs&n=13", "desc": "–ê–∫—Ç–∏–≤–Ω—ã–π –∏ —É–º–Ω—ã–π", "age": 1},
    {"id": 9, "name": "–ö–æ—Ä–æ–ª—å", "photo": "https://i.pinimg.com/736x/f4/de/2e/f4de2e6f9f2c167d55eded71594b4157.jpg", "desc": "–û–Ω –¥–ª—è —Ç–µ–±—è —Ü–∞—Ä—å –∏ –±–æ–≥", "age": 4},
    {"id": 10, "name": "–ë–æ–Ω—è", "photo": "https://avatars.mds.yandex.net/i?id=cac63cf1a4422abd38a805d5a24a851c_l-9226797-images-thumbs&n=13", "desc": "–õ—é–±–∏—Ç –ø–æ–µ—Å—Ç—å", "age": 3},
]
user_answers = {}
donations = {}
user_pets_index = {}

@dp.message(CommandStart())
async def start(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name or message.from_user.username}, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é",
                         reply_markup=kb.reply_menu)

@dp.message()
async def text_handler(message: types.Message):
    if message.text == "üì∞ –ù–æ–≤–æ—Å—Ç–∏":
        await message.answer('–ó–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –≤–∞–º –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏?',reply_markup=kb.inline_news)
    elif message.text == 'üåé –ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ–Ω–¥—ã':
        charity_info, markup = await get_charity(0)
        if charity_info is None:
            await message.answer("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return
        await message.answer(charity_info, reply_markup=markup)
    elif message.text == 'üìö –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –û–†–¢':
        pass
    elif message.text == "ü¶Æ –ü–∏—Ç–æ–º–Ω–∏–∫":
        pass

# üåé –ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ–Ω–¥—ã
@dp.callback_query(lambda c: c.data.startswith("next:"))
async def process_next_fund(callback_query: types.CallbackQuery):
    index = int(callback_query.data.split(":")[1])  # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ–æ–Ω–¥–∞

    charity_info, markup = await get_charity(index)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ–æ–Ω–¥–∞

    if charity_info is None:
        await callback_query.answer("–ë–æ–ª—å—à–µ —Ñ–æ–Ω–¥–æ–≤ –Ω–µ—Ç.")
        return

    await callback_query.message.answer(charity_info, reply_markup=markup)
    await callback_query.answer()



# üì∞ –ù–æ–≤–æ—Å—Ç–∏
@dp.callback_query()
async def callback_query_handler(call: types.CallbackQuery):
    if call.data == "today":
        news = await get_news_today()
        data = await get_data_today()
        await send_long_message(call.message, data)
        if news and news.strip():
            await send_long_message(call.message, news)
        else:
            await send_long_message(call.message, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    elif call.data == 'yesterday':
        news = await get_news_yesterday()
        data = await get_data_yesterday()
        await send_long_message(call.message, data)
        if news and news.strip():
            await send_long_message(call.message, news)
        else:
            await send_long_message(call.message, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")



async def main():
    print("Bot started...")
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
